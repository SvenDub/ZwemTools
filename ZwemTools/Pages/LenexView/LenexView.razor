@page "/lenex-viewer"

@using ZwemTools.Data.Lenex
@using ZwemTools.Data.Lenex.Xml
@using ZwemTools.Data.Sql

@inject LenexParser LenexParser
@inject IStringLocalizer<Strings> Localizer
@inject DatabaseContext Context 

<h3>Lenex Viewer</h3>

<InputFile OnChange="@LoadFile" accept=".lxf"/>

@if (!IsLoading && LenexElement is not null)
{
    <RadzenButton IsBusy="@IsSaving" Click="@OnSave" Text="@Localizer["Save"]"/>
    <table class="table my-3">
        <thead>
        <tr>
            <th>@Localizer["Property"]</th>
            <th>@Localizer["Value"]</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>@Localizer["LenexVersion"]</td>
            <td>@LenexElement.Version</td>
        </tr>
        <tr>
            <td>@Localizer["Software"]</td>
            <td>@LenexElement.Constructor.Name (@LenexElement.Constructor.Version)</td>
        </tr>
        <tr>
            <td>@Localizer["RegisteredTo"]</td>
            <td>@LenexElement.Constructor.Registration</td>
        </tr>
        <tr>
            <td>@Localizer["Software contact"]</td>
            <td>@LenexElement.Constructor.Contact.Email</td>
        </tr>
        </tbody>
    </table>

    <RadzenTabs @bind-SelectedIndex=@selectedIndex>
        <Tabs>
            @foreach (MeetElement meet in LenexElement.Meets)
            {
                <LenexViewMeet Meet="@meet"></LenexViewMeet>
            }
        </Tabs>
    </RadzenTabs>
}
else
{
    if (IsLoading)
    {
        <p class="my-3">@Localizer["Loading"]</p>
    }
    else
    {
        <p class="my-3">@Localizer["NoData"]</p>
    }
}

@code {
    private LenexElement? LenexElement { get; set; }
    private bool IsLoading { get; set; }
    private int selectedIndex;
    private bool IsSaving { get; set; }

    private async Task LoadFile(InputFileChangeEventArgs e)
    {
        IsLoading = true;
        await using Stream stream = e.File.OpenReadStream();
        MemoryStream ms = new();
        await stream.CopyToAsync(ms);
        LenexElement = LenexParser.Parse(ms);
        IsLoading = false;
    }

    private async Task OnSave(MouseEventArgs args)
    {
        IsSaving = true;

        if (LenexElement is not null)
        {
            await Context.Meets.AddRangeAsync(LenexElement.Meets.Select(x => x.ToSql()));
            await Context.SaveChangesAsync();
        }

        IsSaving = false;
    }

}
