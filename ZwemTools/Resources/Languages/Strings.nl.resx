<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Language" xml:space="preserve">
    <value>Taal</value>
  </data>
  <data name="Property" xml:space="preserve">
    <value>Eigenschap</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Waarde</value>
  </data>
  <data name="LenexVersion" xml:space="preserve">
    <value>Lenex versie</value>
  </data>
  <data name="Software" xml:space="preserve">
    <value>Software</value>
  </data>
  <data name="RegisteredTo" xml:space="preserve">
    <value>Geregistreerd aan</value>
  </data>
  <data name="SoftwareContact" xml:space="preserve">
    <value>Software contact</value>
  </data>
  <data name="RestartLanguageTitle" xml:space="preserve">
    <value>Herstarten</value>
  </data>
  <data name="RestartLanguage" xml:space="preserve">
    <value>De app moet opnieuw gestart worden om de taal aan te passen. De app nu sluiten?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleren</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Oké</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Laden...</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>Geen data</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Plaats</value>
  </data>
  <data name="Course" xml:space="preserve">
    <value>Baan</value>
  </data>
  <data name="Organizer" xml:space="preserve">
    <value>Organisatie</value>
  </data>
  <data name="LiveTiming" xml:space="preserve">
    <value>LiveTiming</value>
  </data>
  <data name="AgeCalculation" xml:space="preserve">
    <value>Leeftijdsbepaling</value>
  </data>
  <data name="Session" xml:space="preserve">
    <value>Sessie</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Tijd</value>
  </data>
  <data name="Warmup" xml:space="preserve">
    <value>Inzwemmen</value>
  </data>
  <data name="OfficialsMeeting" xml:space="preserve">
    <value>Juryvergadering</value>
  </data>
  <data name="Stroke" xml:space="preserve">
    <value>Slag</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Geslacht</value>
  </data>
  <data name="MinAge" xml:space="preserve">
    <value>Leeftijd vanaf</value>
  </data>
  <data name="MaxAge" xml:space="preserve">
    <value>Leeftijd tot</value>
  </data>
  <data name="Athletes" xml:space="preserve">
    <value>Zwemmers</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>Resultaten</value>
  </data>
  <data name="MeetNotFound" xml:space="preserve">
    <value>De wedstrijd kon niet worden gevonden.</value>
  </data>
  <data name="Calculate" xml:space="preserve">
    <value>Berekenen</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Afstand</value>
  </data>
  <data name="Difference" xml:space="preserve">
    <value>Verschil</value>
  </data>
  <data name="FromResultTime" xml:space="preserve">
    <value>Vorig resultaat</value>
  </data>
  <data name="ToResultTime" xml:space="preserve">
    <value>Huidig resultaat</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="Relays" xml:space="preserve">
    <value>Estafettes</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Alles selecteren</value>
  </data>
  <data name="SelectAllInMeet" xml:space="preserve">
    <value>Iedereen in wedstrijd selecteren</value>
  </data>
  <data name="The event must be a relay event." xml:space="preserve">
    <value>De afstand moet een estafette zijn.</value>
  </data>
  <data name="The amount of available swimmers must be at least the amount of relay positions." xml:space="preserve">
    <value>Het aantal beschikbare zwemmers moet minimaal het aantal estafetteposities zijn.</value>
  </data>
  <data name="This type of relay is not supported." xml:space="preserve">
    <value>Dit type estafette wordt niet ondersteund.</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Versie</value>
  </data>
  <data name="No time penalty defined for distance." xml:space="preserve">
    <value>Geen straftijd ingesteld voor afstand.</value>
  </data>
</root>