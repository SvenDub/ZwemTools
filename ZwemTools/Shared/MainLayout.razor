@using System.Runtime.InteropServices.WindowsRuntime
@using Windows.ApplicationModel
@using Windows.Management.Deployment
@using AppInfo = Microsoft.Maui.ApplicationModel.AppInfo
@inherits LayoutComponentBase

@inject IStringLocalizer<Strings> Localizer

<RadzenDialog/>
<RadzenNotification/>

<div class="page">
    <div class="sidebar d-print-none">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4 d-print-none">
            @Localizer["Version"]
            @AppInfo.Version
            
            @if (UpdateAvailability == PackageUpdateAvailability.Available)
            {
                <span>&nbsp;| @Localizer["Update available"] </span>
            }
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    private PackageUpdateAvailability UpdateAvailability { get; set; } = PackageUpdateAvailability.Unknown;

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        UpdateAvailability = await AsyncInfo.Run(async _ =>
        {
            PackageManager packageManager = new();
            Package package = packageManager.FindPackageForUser(string.Empty, Package.Current.Id.FullName);
            PackageUpdateAvailabilityResult availabilityResult = await package.CheckUpdateAvailabilityAsync();
            return availabilityResult.Availability;
        });
    }

}
